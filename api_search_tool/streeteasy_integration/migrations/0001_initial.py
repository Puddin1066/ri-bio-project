# Generated by Django 5.2.4 on 2025-07-23 00:34

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='StreetEasyAPIKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('api_key', models.CharField(blank=True, max_length=500)),
                ('rate_limit_per_hour', models.IntegerField(default=100)),
                ('requests_made_today', models.IntegerField(default=0)),
                ('last_request_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'StreetEasy API Key',
                'verbose_name_plural': 'StreetEasy API Keys',
            },
        ),
        migrations.CreateModel(
            name='StreetEasyProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_easy_id', models.CharField(db_index=True, max_length=50, unique=True)),
                ('property_type', models.CharField(choices=[('rental', 'Rental'), ('sale', 'Sale')], max_length=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('pending', 'Pending'), ('sold', 'Sold/Rented'), ('expired', 'Expired')], default='active', max_length=10)),
                ('address', models.CharField(max_length=500)),
                ('neighborhood', models.CharField(blank=True, max_length=100)),
                ('borough', models.CharField(blank=True, max_length=50)),
                ('zipcode', models.CharField(blank=True, max_length=10)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('bedrooms', models.IntegerField(blank=True, null=True)),
                ('bathrooms', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('square_feet', models.IntegerField(blank=True, null=True)),
                ('unit_type', models.CharField(blank=True, max_length=50)),
                ('building_name', models.CharField(blank=True, max_length=200)),
                ('building_type', models.CharField(blank=True, max_length=50)),
                ('year_built', models.IntegerField(blank=True, null=True)),
                ('amenities', models.JSONField(blank=True, default=list)),
                ('pet_policy', models.CharField(blank=True, max_length=100)),
                ('parking', models.BooleanField(default=False)),
                ('doorman', models.BooleanField(default=False)),
                ('elevator', models.BooleanField(default=False)),
                ('agent_name', models.CharField(blank=True, max_length=100)),
                ('agent_company', models.CharField(blank=True, max_length=200)),
                ('listing_url', models.URLField(blank=True)),
                ('image_urls', models.JSONField(blank=True, default=list)),
                ('raw_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_scraped', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'StreetEasy Property',
                'verbose_name_plural': 'StreetEasy Properties',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='StreetEasySearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('search_parameters', models.JSONField()),
                ('results_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_executed', models.DateTimeField(default=django.utils.timezone.now)),
                ('min_price', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('min_bedrooms', models.IntegerField(blank=True, null=True)),
                ('max_bedrooms', models.IntegerField(blank=True, null=True)),
                ('neighborhood', models.CharField(blank=True, max_length=100)),
                ('property_type', models.CharField(blank=True, max_length=10)),
            ],
            options={
                'verbose_name': 'StreetEasy Search',
                'verbose_name_plural': 'StreetEasy Searches',
                'ordering': ['-last_executed'],
            },
        ),
        migrations.CreateModel(
            name='StreetEasyEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('entity_type', models.CharField(choices=[('individual', 'Individual'), ('company', 'Company'), ('fund', 'Investment Fund'), ('reit', 'REIT'), ('developer', 'Developer'), ('broker', 'Brokerage'), ('family_office', 'Family Office'), ('government', 'Government Entity')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('headquarters_location', models.CharField(blank=True, max_length=200)),
                ('founded_year', models.IntegerField(blank=True, null=True)),
                ('website', models.URLField(blank=True)),
                ('total_transaction_volume', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('transaction_count', models.IntegerField(default=0)),
                ('largest_transaction', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('avg_transaction_size', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('last_transaction_date', models.DateField(blank=True, null=True)),
                ('most_active_year', models.IntegerField(blank=True, null=True)),
                ('primary_markets', models.JSONField(blank=True, default=list)),
                ('property_types_focus', models.JSONField(blank=True, default=list)),
                ('aliases', models.JSONField(blank=True, default=list)),
                ('related_entities', models.JSONField(blank=True, default=list)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Real Estate Entity',
                'verbose_name_plural': 'Real Estate Entities',
                'ordering': ['-total_transaction_volume', 'name'],
                'indexes': [models.Index(fields=['name'], name='streeteasy__name_74f510_idx'), models.Index(fields=['entity_type'], name='streeteasy__entity__25d210_idx'), models.Index(fields=['total_transaction_volume'], name='streeteasy__total_t_538225_idx')],
            },
        ),
        migrations.CreateModel(
            name='StreetEasyLiquidityEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('event_type', models.CharField(choices=[('sale', 'Property Sale'), ('portfolio_sale', 'Portfolio Sale'), ('building_sale', 'Building Sale'), ('development_sale', 'Development Sale'), ('refinancing', 'Refinancing'), ('ipo', 'Real Estate IPO'), ('merger', 'Merger/Acquisition'), ('fund_raise', 'Fund Raising')], max_length=20)),
                ('transaction_date', models.DateField()),
                ('transaction_amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('seller_name', models.CharField(max_length=200)),
                ('seller_type', models.CharField(blank=True, choices=[('individual', 'Individual'), ('company', 'Company'), ('fund', 'Investment Fund'), ('reit', 'REIT'), ('developer', 'Developer'), ('broker', 'Brokerage'), ('family_office', 'Family Office')], max_length=20)),
                ('buyer_name', models.CharField(blank=True, max_length=200)),
                ('buyer_type', models.CharField(blank=True, choices=[('individual', 'Individual'), ('company', 'Company'), ('fund', 'Investment Fund'), ('reit', 'REIT'), ('developer', 'Developer'), ('broker', 'Brokerage'), ('family_office', 'Family Office')], max_length=20)),
                ('property_address', models.CharField(blank=True, max_length=500)),
                ('neighborhood', models.CharField(blank=True, max_length=100)),
                ('borough', models.CharField(blank=True, max_length=50)),
                ('property_type', models.CharField(blank=True, max_length=100)),
                ('square_footage', models.IntegerField(blank=True, null=True)),
                ('unit_count', models.IntegerField(blank=True, null=True)),
                ('price_per_sqft', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cap_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('broker_firm', models.CharField(blank=True, max_length=200)),
                ('broker_name', models.CharField(blank=True, max_length=200)),
                ('source_url', models.URLField(blank=True)),
                ('source_publication', models.CharField(blank=True, max_length=100)),
                ('confidence_score', models.DecimalField(decimal_places=2, default=1.0, max_digits=3)),
                ('notes', models.TextField(blank=True)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('raw_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Liquidity Event',
                'verbose_name_plural': 'Liquidity Events',
                'ordering': ['-transaction_amount', '-transaction_date'],
                'indexes': [models.Index(fields=['transaction_date', 'transaction_amount'], name='streeteasy__transac_2919a6_idx'), models.Index(fields=['seller_name'], name='streeteasy__seller__880a18_idx'), models.Index(fields=['buyer_name'], name='streeteasy__buyer_n_8f0860_idx'), models.Index(fields=['event_type'], name='streeteasy__event_t_c14adb_idx')],
            },
        ),
    ]
